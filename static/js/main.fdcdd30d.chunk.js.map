{"version":3,"sources":["components/Statistics/Statistics.js","components/Options/Options.js","components/Feedback/Feedback.js","components/Notification/Notification.js","App.js","index.js","components/Options/Options.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Options","options","onLeaveFeedback","className","styles","buttonsBlock","map","option","type","name","onClick","shortid","generate","Feedback","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","result","percentage","Math","round","countPositiveFeedbackPercentage","e","target","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uOAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,gCCgBSC,EArBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1B,OACE,qBAAKC,UAAWC,IAAOC,aAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,KAAMF,EACNG,QAASR,EAJX,SAMGK,GALII,IAAQC,kBCKRC,EAZE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACE,qCACE,6BAAKD,IACJC,MCOQC,EAXM,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,QAC7B,OACE,qCACE,6BAAKH,IACL,4BAAIG,QCDK,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAEMC,EAAqB,WAEzB,OADe5B,EAAOC,EAAUC,GAU5BC,EAAQyB,IACRxB,EAPkC,WACtC,IAAMyB,EAASD,IACTE,EAAqB,IAAP9B,EAAc6B,EAClC,OAAOE,KAAKC,MAAMF,GAIOG,GAoB3B,OACE,oCACE,cAAC,EAAD,CAAUd,MAAM,wBAAhB,SACE,cAAC,EAAD,CACEb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAvBgB,SAAA2B,GAGtB,OADaA,EAAEC,OAAOrB,MAEpB,IAAK,OACHW,GAAQ,SAAAW,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHV,GAAW,SAAAW,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHV,GAAO,SAAAW,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAaS,IAAVnC,EACC,cAAC,EAAD,CAAUgB,MAAM,aAAhB,SACE,cAAC,EAAD,CAAcG,QAAQ,wBAGxB,cAAC,EAAD,CAAUH,MAAM,aAAhB,SACE,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,S,MC1DhCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,aAAe,iC","file":"static/js/main.fdcdd30d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport styles from '../Options/Options.module.css';\n\nconst Options = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.buttonsBlock}>\n      {options.map(option => (\n        <button\n          key={shortid.generate()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\nOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Options;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Feedback = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nFeedback.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ title, message }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      <p>{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport Options from './components/Options';\nimport Feedback from './components/Feedback';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    const result = good + neutral + bad;\n    return result;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const result = countTotalFeedback();\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  const onLeaveFeedback = e => {\n    /* console.log(e.target.name); */\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <section>\n      <Feedback title=\"Please leave feedback\">\n        <Options\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Feedback>\n\n      {total === 0 ? (\n        <Feedback title=\"Statistics\">\n          <Notification message=\"No feedback given\" />\n        </Feedback>\n      ) : (\n        <Feedback title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Feedback>\n      )}\n    </section>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBlock\":\"Options_buttonsBlock__1BNS6\"};"],"sourceRoot":""}